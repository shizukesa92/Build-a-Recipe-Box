var recipes = (typeof localStorage["storedRecipes"] != "undefined") ? JSON.parse(localStorage["storedRecipes"]) : [{
		name: "Pumpkin Pie",
		ingredients: ["Pumpkin Puree", "Sweetened Condensed Milk", "Eggs", "Pumpkin Pie Spice", "Pie Crust"]
	},
	{
		name: "Spaghetti",
		ingredients: ["Noodles", "Tomato Sauce", "(Optional) Meatballs"]
	}
];

var editId;

class Modal extends React.Component {







	render() {
		return (
			<div>
		<div id="myModal" className="modal fade" role="dialog">
			<div className="modal-dialog">
				<div className="modal-content">
					<div className="modal-header">
						<button type="button" className="close" data-dismiss="modal">&times;</button>
						<h4 className="modal-title">Create a recipe</h4>
					</div>
					<div className="modal-body">
						<div className="form-group">
							<label for="usr">Recipe:</label>
							<input type="text" className="form-control" id="title"/>
						</div>
						<div className="form-group">
							<label for="usr">Ingredients:</label>
							<input type="textarea" className="form-control" placeholder="Enter ingredients separated by comma" id="ingredients"/>
						</div>
					</div>
					<div className="modal-footer">
							<Submit update = {this.props.update} submitType = "newRecipe"/>
						<button type="button" className="btn btn-default" data-dismiss="modal">Close</button>
					</div>
				</div>
			</div>
	</div>
	<div id="myModaltwo" className="modal fade" role="dialog">
			<div className="modal-dialog">
				<div className="modal-content">
					<div className="modal-header">
						<button type="button" className="close" data-dismiss="modal">&times;</button>
						<h4 className="modal-title">Edit a recipe</h4>
					</div>
					<div className="modal-body">
						<div className="form-group">
							<label for="usr" id ="editLabel"></label>
						</div>
						<div className="form-group">
							<label for="usr">Ingredients:</label>
							<input type="textarea" className="form-control" placeholder="Enter ingredients separated by comma" id="ingredientsEdit"/>
						</div>
					</div>
					<div className="modal-footer">
							<Submit update = {this.props.update} submitType = "editRecipe"/>
						<button type="button" className="btn btn-default" data-dismiss="modal">Close</button>
					</div>
				</div>
			</div>
	</div>
	</div>

		);


	}



}


class Submit extends React.Component {
	render() {
		const createRecipe = () => {
			const recipe = {
				name: document.getElementById("title").value,
				ingredients: document.getElementById("ingredients").value.split(",")
			};
			recipes = [...recipes, recipe];
			this.props.update(recipes);

		};
		const editRecipe = () => {
			recipes[editId].ingredients = document.getElementById("ingredientsEdit").value.split(",");
			this.props.update(recipes);
		}

		const updating = this.props.submitType == "newRecipe" ? createRecipe : editRecipe;

		return (
			<input type="submit" className="btn btn-info" value="Submit" onClick = {updating} data-dismiss="modal" />
		);
	};


}

class Recipe extends React.Component {


	render() {
		const name = this.props.name;
		const id = this.props.index;

		const recipe = this.props.ingredients.map(ingredient => {
			return (<tr>
							<td>{ingredient}</td>
						</tr>);
		});
		const editName = () => {
			document.getElementById("editLabel").innerHTML = name;
			editId = id;
		}
		const deleteRecipe = () => {
			recipes.splice(id, 1);
			this.props.update(recipes);

		}

		return (
			<div className = "panel panel-default">
			<button type="button" className="btn btn-primary btn-lg btn-block" data-toggle="collapse" data-target={"#" + id}>{name}</button>
			<div id={id} className="panel-collapse collapse">
				<h4>Ingredients</h4>
				<table className="table">
						<tbody>
								{recipe}
						</tbody>
				</table>
				<button type="button" className="btn btn-default" data-toggle="modal" data-target="#myModaltwo" onClick={editName}>Edit</button>

		<button type="button" className="btn btn-danger" data-toggle="modal" onClick = {deleteRecipe}>Delete</button>

			</div>
		</div>
		);

	}
}


class RecipeList extends React.Component {
	render() {

		const list = this.props.list.map((ingredients, index) => {
				return (<Recipe name = {ingredients.name} ingredients = {ingredients.ingredients} index = {index} update = {this.props.update}/>);
			}

		);

		return (
			<div>{list}</div>
		);

	}
}

class Parent extends React.Component {
	constructor(props) {
		super(props);
		this.state = {
			recipes: this.props.recipes
		};
	}

	update = (recipe) => {
		this.setState({
			recipes: recipe
		})
	}
	render() {


		localStorage.setItem("storedRecipes", JSON.stringify(recipes));
		ReactDOM.render(<Modal update = {this.update}/>, document.getElementById("modal"));
		ReactDOM.render(<button type="button" className="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal" id="create">Create Recipe</button>,

			document.getElementById("button"));


		return (
			<div className = "panel-group">
						<RecipeList list = {this.state.recipes} update = {this.update}/>
				</div>
		);

	}

}

ReactDOM.render(<Parent recipes = {recipes}/>, document.getElementById("recipeWell"));
